api=<your api key>
secret=<your secret key>
# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the database connection
# Connection url for the database "cookle
#"
#spring.datasource.url=jdbc:mysql://localhost:3306/polbot?useSSL=false
spring.datasource.url=jdbc:sqlserver://devsqlserver;databaseName=TestEY_5;integratedSecurity=true;
# Username and password
spring.datasource.username=
spring.datasource.password=
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
# ===============================
# = JPA / HIBERNATE
# ===============================
# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).
# Show or not log for each sq
#l query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto=update
# Naming strategy
spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy
# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.SQLServerDialect
logging.file=application.log
endpoints.jmx.domain=myapp
endpoints.jmx.unique-names=true
#
#
#
# application messages
config.currency.page.title=Currency Config Page


spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=<your email address>
spring.mail.password=<your password>
spring.mail.from=<your email address>
spring.mail.properties.mail.smtp.auth=true;
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.ssl.enable=false

#thymyleaf config
spring.thymeleaf.cache=false
spring.messages.basename=Messages
