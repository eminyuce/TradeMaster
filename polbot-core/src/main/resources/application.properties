api=3KVKS807-P34DQJ4H-2M8FXGH0-M8UE7PJ1
secret=34aad94fbb950a3e9ed024b9eae5ef8f87c9dcd72d7d98d2bdef55c340a354df65b8b0539c287b5516c1759e9a4e7f61d19df3f269985f8a9f67aedab2706beb


# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection

# Connection url for the database "cookle
#"
spring.datasource.url = jdbc:mysql://localhost:3306/polbot?useSSL=false

# Username and password
spring.datasource.username = root
spring.datasource.password = 145145145

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

logging.file=application.log

endpoints.jmx.domain=myapp
endpoints.jmx.unique-names=true
